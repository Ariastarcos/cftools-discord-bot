version: "3"

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  app_network:
    driver: bridge
    # external: true

services:
  client:
    container_name: client
    depends_on:
      - api
    build:
      context: .
      dockerfile: ./apps/client/Dockerfile
    restart: unless-stopped
    volumes:
      - ./apps/client/data:/app/apps/client/data
      - ./apps/client/logs:/app/apps/client/logs
      - ./apps/client/config.json:/app/apps/client/config.json
      - ./apps/client/config.example.json:/app/apps/client/config.example.json
    networks:
      - app_network

  web:
    container_name: web
    depends_on:
      - api
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - app_network

  api:
    container_name: api
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    restart: unless-stopped
    ports:
      - 5000:5000
    networks:
      - app_network

  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - app_network

volumes:
  database:
    driver: local
